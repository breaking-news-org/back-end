components:
  schemas:
    AuthorName:
      type: string
    CategoryId:
      maximum: 9223372036854775807
      minimum: -9223372036854775808
      type: integer
    CategoryName:
      type: string
    CreateNews:
      properties:
        category:
          $ref: '#/components/schemas/CategoryId'
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        isPublished:
          type: boolean
        text:
          $ref: '#/components/schemas/NewsText'
        title:
          $ref: '#/components/schemas/NewsTitle'
      required:
      - title
      - text
      - category
      - images
      - isPublished
      type: object
    CreatedAt:
      example: 2016-07-22T00:00:00Z
      format: yyyy-mm-ddThh:MM:ssZ
      type: string
    Either_InsertNewsError_NewsItem:
      oneOf:
      - properties:
          Left:
            $ref: '#/components/schemas/InsertNewsError'
        required:
        - Left
        type: object
      - properties:
          Right:
            $ref: '#/components/schemas/NewsItem'
        required:
        - Right
        type: object
    Either_RegisterError_FullToken:
      oneOf:
      - properties:
          Left:
            $ref: '#/components/schemas/RegisterError'
        required:
        - Left
        type: object
      - properties:
          Right:
            $ref: '#/components/schemas/FullToken'
        required:
        - Right
        type: object
    Either_RegisteredUserError_FullToken:
      oneOf:
      - properties:
          Left:
            $ref: '#/components/schemas/RegisteredUserError'
        required:
        - Left
        type: object
      - properties:
          Right:
            $ref: '#/components/schemas/FullToken'
        required:
        - Right
        type: object
    Either_RotateError_FullToken:
      oneOf:
      - properties:
          Left:
            $ref: '#/components/schemas/RotateError'
        required:
        - Left
        type: object
      - properties:
          Right:
            $ref: '#/components/schemas/FullToken'
        required:
        - Right
        type: object  
    FullToken:
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
      - refreshToken
      - accessToken
      type: object
    Image:
      type: string
    InsertNewsError:
      maximum: 9223372036854775807
      minimum: -9223372036854775808
      type: integer
    NewsId:
      maximum: 9223372036854775807
      minimum: -9223372036854775808
      type: integer
    NewsItem:
      properties:
        authorName:
          $ref: '#/components/schemas/AuthorName'
        category:
          $ref: '#/components/schemas/CategoryId'
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
        id:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        isPublished:
          type: boolean
        text:
          $ref: '#/components/schemas/NewsText'
        title:
          $ref: '#/components/schemas/NewsTitle'
      required:
      - id
      - title
      - createdAt
      - authorName
      - category
      - text
      - images
      - isPublished
      type: object
    NewsText:
      type: string
    NewsTitle:
      type: string
    Password:
      type: string
    RegisterError:
      enum:
      - UserExists
      type: string
    RegisteredUserError:
      enum:
      - WrongPassword
      - UserDoesNotExist
      type: string
    RotateError:
      enum:
      - SessionDoesNotExist
      - SessionHasNewerRefreshTokenId
      type: string
    SelectedCategoryItem:
      properties:
        id:
          $ref: '#/components/schemas/CategoryId'
        name:
          $ref: '#/components/schemas/CategoryName'
        parent:
          $ref: '#/components/schemas/CategoryId'
      required:
      - id
      - name
      type: object
    SetIsPublished:
      properties:
        isPublished:
          type: boolean
        newsIds:
          items:
            $ref: '#/components/schemas/NewsId'
          type: array
      required:
      - newsIds
      - isPublished
      type: object
    UserLoginForm:
      properties:
        password:
          $ref: '#/components/schemas/Password'
        userName:
          $ref: '#/components/schemas/UserName'
      required:
      - userName
      - password
      type: object
    UserName:
      type: string
    UserRegisterForm:
      properties:
        authorName:
          $ref: '#/components/schemas/AuthorName'
        password:
          $ref: '#/components/schemas/Password'
        userName:
          $ref: '#/components/schemas/UserName'
      required:
      - userName
      - password
      - authorName
      type: object
  securitySchemes:
    JWT:
      bearerFormat: JWT
      description: Bearer Authentication
      scheme: bearer
      type: http
info:
  title: ''
  version: ''
openapi: 3.0.0
paths:
  /api1: {}
  /api1/news/categories/get:
    get:
      parameters:
      - in: query
        name: include
        schema:
          items:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          type: array
      - in: query
        name: exclude
        schema:
          items:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          type: array
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SelectedCategoryItem'
                type: array
          description: ''
        '400':
          description: Invalid `exclude` or `include`
      security:
      - JWT: []
  /api1/news/create:
    post:
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateNews'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Either_InsertNewsError_NewsItem'
          description: ''
        '400':
          description: Invalid `body`
      security:
      - JWT: []
  /api1/news/get:
    get:
      parameters:
      - in: query
        name: createdUntil
        required: false
        schema:
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
      - in: query
        name: createdSince
        required: false
        schema:
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
      - in: query
        name: authorName
        required: false
        schema:
          type: string
      - in: query
        name: categoriesInclude
        schema:
          items:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          type: array
      - in: query
        name: categoriesExclude
        schema:
          items:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          type: array
      - in: query
        name: titleLike
        required: false
        schema:
          type: string
      - in: query
        name: textLike
        required: false
        schema:
          type: string
      - in: query
        name: showUnpublished
        required: false
        schema:
          type: boolean
      - in: query
        name: showPublished
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/NewsItem'
                type: array
          description: ''
        '400':
          description: Invalid `showPublished` or `showUnpublished` or `textLike`
            or `titleLike` or `categoriesExclude` or `categoriesInclude` or `authorName`
            or `createdSince` or `createdUntil`
      security:
      - JWT: []
  /api1/news/set-is-published:
    post:
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SetIsPublished'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/NewsId'
                type: array
          description: ''
        '400':
          description: Invalid `body`
      security:
      - JWT: []
  /api1/user/login:
    post:
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UserLoginForm'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Either_RegisteredUserError_FullToken'
          description: ''
        '400':
          description: Invalid `body`
  /api1/user/register:
    post:
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UserRegisterForm'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Either_RegisterError_FullToken'
          description: ''
        '400':
          description: Invalid `body`
  /api1/user/rotate-refresh-token:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Either_RotateError_FullToken'
          description: ''
      security:
      - JWT: []
  /api1/user/unregister:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8: {}
          description: ''
      security:
      - JWT: []
