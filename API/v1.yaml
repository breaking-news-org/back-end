components:
  schemas:
    CreateNews:
      properties:
        category:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        images:
          $ref: '#/components/schemas/IndexedImages'
        text:
          type: string
        title:
          type: string
      required:
      - title
      - text
      - category
      - images
      type: object
    GetNews:
      properties:
        category:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        creationDate:
          $ref: '#/components/schemas/UTCTime'
        creator:
          type: string
        id:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        images:
          $ref: '#/components/schemas/IndexedImages'
        isPublished:
          type: boolean
        text:
          type: string
        title:
          type: string
      required:
      - title
      - creationDate
      - creator
      - category
      - text
      - id
      - images
      - isPublished
      type: object
    IndexedImage:
      properties:
        id:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        value:
          type: string
      required:
      - id
      - value
      type: object
    IndexedImages:
      items:
        $ref: '#/components/schemas/IndexedImage'
      type: array
    UTCTime:
      example: 2016-07-22T00:00:00Z
      format: yyyy-mm-ddThh:MM:ssZ
      type: string
    UserRegistrationForm:
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
      type: object
  securitySchemes:
    JWT:
      bearerFormat: JWT
      description: Bearer Authentication
      scheme: bearer
      type: http
info:
  title: ''
  version: ''
openapi: 3.0.0
paths:
  /api1/news/create:
    post:
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateNews'
      responses:
        '200':
          content:
            application/json;charset=utf-8: {}
          description: ''
        '400':
          description: Invalid `body`
      security:
      - JWT: []
  /api1/news/get:
    put:
      parameters:
      - in: query
        name: createdUntil
        required: false
        schema:
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
      - in: query
        name: createdSince
        required: false
        schema:
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
      - in: query
        name: createdAt
        required: false
        schema:
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
      - in: query
        name: creator
        required: false
        schema:
          type: string
      - in: query
        name: category
        required: false
        schema:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
      - in: query
        name: content
        required: false
        schema:
          type: string
      - in: query
        name: block
        required: false
        schema:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
      - in: query
        name: newsId
        required: false
        schema:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/GetNews'
                type: array
          description: ''
        '400':
          description: Invalid `newsId` or `block` or `content` or `category` or `creator`
            or `createdAt` or `createdSince` or `createdUntil`
      security:
      - JWT: []
  /api1/user/authorize:
    post:
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UserRegistrationForm'
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: string
          description: ''
        '400':
          description: Invalid `body`
