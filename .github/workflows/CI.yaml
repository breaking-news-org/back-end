concurrency:
  cancel-in-progress: false
  group: pages
jobs:
  _1_update_flake_locks:
    name: Update flake locks
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}\nsubstituters = https://cache.nixos.org/ https://cache.iog.io https://nix-community.cachix.org https://deemp.cachix.org \ntrusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= haskell-language-server.cachix.org-1:juFfHrwkOxqIOZShtC4YC1uT1bBcq2RSvC7OMKx0Nz8= deemp.cachix.org-1:9shDxyR2ANqEPQEEYDL/xIOnoPwxHot21L5fiZnFL18=\n"
          install_url: https://releases.nixos.org/nix/nix-2.11.1/install
      - name: Config git for github-actions
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Update flake locks
        run: |
          git pull --rebase --autostash
          nix run .#updateLocks
          git commit -a -m "action: Update flake locks" && git push || echo ""
  _2_push_to_cachix:
    name: Push to cachix
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}\nsubstituters = https://cache.nixos.org/ https://cache.iog.io https://nix-community.cachix.org https://deemp.cachix.org \ntrusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= haskell-language-server.cachix.org-1:juFfHrwkOxqIOZShtC4YC1uT1bBcq2RSvC7OMKx0Nz8= deemp.cachix.org-1:9shDxyR2ANqEPQEEYDL/xIOnoPwxHot21L5fiZnFL18=\n"
          install_url: https://releases.nixos.org/nix/nix-2.11.1/install
      - name: Log in to Cachix
        uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: ${{ secrets.CACHIX_CACHE }}
      - env:
          CACHIX_CACHE: ${{ secrets.CACHIX_CACHE }}
        name: Push flakes to Cachix
        run: nix run .#pushToCachix
    strategy:
      matrix:
        os:
          - macos-11
          - macos-12
          - ubuntu-20.04
          - ubuntu-22.04
  _3_push_to_docker_hub:
    name: Push to Docker Hub
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}\nsubstituters = https://cache.nixos.org/ https://cache.iog.io https://nix-community.cachix.org https://deemp.cachix.org \ntrusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= haskell-language-server.cachix.org-1:juFfHrwkOxqIOZShtC4YC1uT1bBcq2RSvC7OMKx0Nz8= deemp.cachix.org-1:9shDxyR2ANqEPQEEYDL/xIOnoPwxHot21L5fiZnFL18=\n"
          install_url: https://releases.nixos.org/nix/nix-2.11.1/install
      - name: Log in to Docker
        uses: docker/login-action@v2.1.0
        with:
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
      - env:
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        name: Push to Docker Hub
        run: |
          cd back
          nix run .#appPushToDockerHub
          nix run .#testPushToDockerHub
  _4_gen_openapi3_specification:
    name: Generate OpenAPI3 specification for the server
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}\nsubstituters = https://cache.nixos.org/ https://cache.iog.io https://nix-community.cachix.org https://deemp.cachix.org \ntrusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= haskell-language-server.cachix.org-1:juFfHrwkOxqIOZShtC4YC1uT1bBcq2RSvC7OMKx0Nz8= deemp.cachix.org-1:9shDxyR2ANqEPQEEYDL/xIOnoPwxHot21L5fiZnFL18=\n"
          install_url: https://releases.nixos.org/nix/nix-2.11.1/install
      - name: Generate specification
        run: |
          git pull --rebase --autostash
          nix run .#genOpenApi3
          git commit -a -m "action: update OpenAPI3 spec" && git push || echo ""
  _5_build_deploy_gh_pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: _4_gen_openapi3_specification
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: .
      - id: deployment
        name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
name: CI
"on":
  pull_request: {}
  push: {}
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch: {}
permissions:
  contents: write
