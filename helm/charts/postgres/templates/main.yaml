{{ $environment := print .Values.environment }}
{{ $appName := .Values.app }}
{{ $app := print $appName "-" .Values.environment }}
{{ $configMapName := print $app "-configmap" }}
{{ $container := .Values.container }}
{{ $service := .Values.service }}
{{ $containerConfig := $container.config }}
{{ $containerPortName := print $app "-port" }}
{{ $volumeName := print $app "-volume" }}
{{ $pvcName := print $app "-pvc" }}
{{ $db := .Values.db }}
{{ $labels := (dict "environment" $environment "app" $appName) | toYaml }}
{{ $labelsBlock := (dict "labels" ($labels | fromYaml)) | toYaml }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $configMapName }}
{{ $labelsBlock | indent 2 }}
data:
  POSTGRES_DB: {{ $db.POSTGRES_DB }}
  POSTGRES_USER: {{ $db.POSTGRES_USER }}
  POSTGRES_PASSWORD: {{ $db.POSTGRES_PASSWORD }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $app }}-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{ $labels | indent 6 }}
  template:
    metadata:
{{ $labelsBlock | indent 6 }}
    spec:
      containers:
        - name: postgres
          image: "{{ $container.image }}:{{ $container.tag }}"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: {{ $db.port }}
              name: {{ $containerPortName }}
          envFrom:
            - configMapRef:
                name: {{ $configMapName }}
          volumeMounts:
            - mountPath: {{ $container.volumeMounts.mountPath }}
              name: {{ $volumeName }}
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      volumes:
        - name: {{ $volumeName }}
          persistentVolumeClaim:
            claimName: {{ $pvcName }}
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: {{ $pvName }}
  labels:
    type: local
{{ $labels | indent 4 }}
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ $pvcName }}
{{ $labelsBlock | indent 2 }}
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $app }}-service
{{ $labelsBlock | indent 2 }}
spec:
  type: NodePort
  ports:
    - port: {{ $service.port }} 
      name: {{ $containerPortName }}
      targetPort: {{ $db.port }}
      nodePort: {{ $service.nodePort }}
  selector:
{{ $labels | indent 4 }}
